-- Load the Luna UI Library
local Luna = loadstring(game:HttpGet("https://raw.githubusercontent.com/Nebula-Softworks/Luna-Interface-Suite/refs/heads/master/source.lua", true))()

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer
local TextChatService = game:GetService("TextChatService")
local ToolModule = loadstring(game:HttpGet("https://raw.githubusercontent.com/GoldDoomOwner/Gold-Doom-Script/refs/heads/main/Tool%20Giver"))()
local UserInputService = game:GetService("UserInputService")

local Custom_PowerTools = {"Awaken", "Oblivious","Titanium", "Drug Abused", "Soul Monarch", "Creation", "AkazaDash", "ESPER RAGE", "GOLDEN MONARCH", "VOID WALKER", "STORM BREAKER", "CRIMSON REAPER", "CELESTIAL WRATH", "SHADOW ASSASSIN", "INFERNO KING", "FROZEN DOMAIN", "GRAVITY TITAN", "PLASMA SURGE", "TOXIC VENOM", "TIME WARP", "CRYSTAL FORTRESS", "BLOOD MOON", "DRAGON SPIRIT", "NEBULA VOID", "EARTH SHAKER", "WIND DANCER", "CHAOS BREAKER"}

if localPlayer then
	local textChannel = TextChatService:WaitForChild("TextChannels"):WaitForChild("RBXGeneral")
	textChannel:DisplaySystemMessage("[DAHEN HUB]: LOADING SCRIPT...")
	task.wait()
	textChannel:DisplaySystemMessage("[DAHEN HUB]: DAHEN HUB | INK GAMES")
	task.wait()
	textChannel:DisplaySystemMessage("[DAHEN HUB]: LOADED")
end

-- Create main window with Luna UI
local Window = Luna:CreateWindow({
    Name = "DAHEN HUB INK GAME",
    Subtitle = "DAHEN HUB TESTING | INK GAMES",
    LoadingEnabled = true,
    KeySystem = false,
})

-- Create Home Tab first (required)
Window:CreateHomeTab({
    SupportedExecutors = {"Synapse X", "Krnl", "Script-Ware"},
    DiscordInvite = "https://discord.gg/golddoom"
})

-- Wait a moment for home tab to initialize
task.wait(0.5)

-- Create all tabs using the proper Luna UI method
local MainTab = Window:CreateTab({Name = "Main"})
local PlayerTab = Window:CreateTab({Name = "Player"})
local CombatTab = Window:CreateTab({Name = "Combat"})
local RLGLTab = Window:CreateTab({Name = "RLGL"})
local TugOfWarTab = Window:CreateTab({Name = "Tug of War"})
local HideSeekTab = Window:CreateTab({Name = "Hide and Seek"})
local JumpRopeTab = Window:CreateTab({Name = "Jump Rope"})
local GlassBridgeTab = Window:CreateTab({Name = "Glass Bridge"})
local MingleTab = Window:CreateTab({Name = "Mingle"})
local FinalsTab = Window:CreateTab({Name = "Finals"})
local MiscTab = Window:CreateTab({Name = "Misc"})

-- Show notification
Luna:Notify({Title = "DAHEN HUB", Content = "Successfully Loaded!", Duration = 4, Image = "Info"})

-- Player Teleport System Variables
local selectedPlayer = nil

-- Function to get all players except local player
local function CreateGlassBridgeCover()
	local glassHolder = game.Workspace:FindFirstChild("GlassBridge")
	if not glassHolder then
		warn("GlassBridge not found in Workspace")
		return
	end

	glassHolder = glassHolder:FindFirstChild("GlassHolder")
	if not glassHolder then
		warn("GlassHolder not found in GlassBridge")
		return
	end

	local models = glassHolder:GetChildren()

	if #models == 0 then
		warn("No models found in GlassHolder")
		return
	end

	-- Calculate the bounding box that encompasses all models
	local minX, minY, minZ = math.huge, math.huge, math.huge
	local maxX, maxY, maxZ = -math.huge, -math.huge, -math.huge

	for _, model in ipairs(models) do
		if model:IsA("Model") or model:IsA("BasePart") then
			local cframe, size

			if model:IsA("Model") then
				cframe, size = model:GetBoundingBox()
			else
				cframe = model.CFrame
				size = model.Size
			end

			local halfSize = size / 2
			local corners = {
				cframe * CFrame.new(-halfSize.X, -halfSize.Y, -halfSize.Z),
				cframe * CFrame.new(halfSize.X, -halfSize.Y, -halfSize.Z),
				cframe * CFrame.new(-halfSize.X, halfSize.Y, -halfSize.Z),
				cframe * CFrame.new(halfSize.X, halfSize.Y, -halfSize.Z),
				cframe * CFrame.new(-halfSize.X, -halfSize.Y, halfSize.Z),
				cframe * CFrame.new(halfSize.X, -halfSize.Y, halfSize.Z),
				cframe * CFrame.new(-halfSize.X, halfSize.Y, halfSize.Z),
				cframe * CFrame.new(halfSize.X, halfSize.Y, halfSize.Z),
			}

			for _, corner in ipairs(corners) do
				local pos = corner.Position
				minX = math.min(minX, pos.X)
				minY = math.min(minY, pos.Y)
				minZ = math.min(minZ, pos.Z)
				maxX = math.max(maxX, pos.X)
				maxY = math.max(maxY, pos.Y)
				maxZ = math.max(maxZ, pos.Z)
			end
		end
	end

	local coverPart = Instance.new("Part")
	coverPart.Name = "GlassBridgeCover"
	coverPart.Anchored = true
	coverPart.CanCollide = true
	coverPart.Material = Enum.Material.SmoothPlastic
	coverPart.Color = Color3.fromRGB(100, 100, 255)
	coverPart.Transparency = 0.3

	local sizeX = maxX - minX + 2
	local sizeY = maxY - minY + 2
	local sizeZ = maxZ - minZ + 2

	local centerX = (minX + maxX) / 2
	local centerY = (minY + maxY) / 2
	local centerZ = (minZ + maxZ) / 2

	coverPart.Size = Vector3.new(sizeX, sizeY, sizeZ)
	coverPart.CFrame = CFrame.new(centerX, centerY, centerZ)
	coverPart.Parent = workspace

	print("Glass Bridge Cover created!")
	return coverPart
end

local function getPlayerList()
	local playerList = {}
	for _, player in pairs(Players:GetPlayers()) do
		if player ~= localPlayer then
			table.insert(playerList, player.DisplayName)
		end
	end
	return #playerList > 0 and playerList or {"No Players"}
end

local function getPlayerByDisplayName(displayName)
	for _, player in pairs(Players:GetPlayers()) do
		if player.DisplayName == displayName then
			return player
		end
	end
	return nil
end

local function teleportToPlayer(targetPlayer)
	if not targetPlayer or not targetPlayer.Character then
		return
	end

	local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
	local localRoot = localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart")

	if targetRoot and localRoot then
		localRoot.CFrame = targetRoot.CFrame * CFrame.new(0, 0, 3)
	end
end

-- ==================== MAIN TAB ====================
MainTab:CreateSection({Name = "Custom Emotes"})

MainTab:CreateButton({
    Name = "Custom Emotes",
    Callback = function()
        loadstring(game:HttpGet("https://pastebin.com/raw/1p6xnBNf"))()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/GoldDoomOwner/Gold-Doom-Script/refs/heads/main/jerk"))()
    end
})

MainTab:CreateSection({Name = "Power Tools"})

local selectedTool1 = "Awaken"
local selectedTool2 = "Oblivious"

MainTab:CreateDropdown({
    Name = "Select Tool 1",
    Options = Custom_PowerTools,
    CurrentOption = selectedTool1,
    Callback = function(selected)
        selectedTool1 = selected
        print("Selected tool 1:", selectedTool1)
    end
})

MainTab:CreateDropdown({
    Name = "Select Tool 2",
    Options = Custom_PowerTools,
    CurrentOption = selectedTool2,
    Callback = function(selected)
        selectedTool2 = selected
        print("Selected tool 2:", selectedTool2)
    end
})

local customName = ""
MainTab:CreateTextInput({
    Name = "Custom Powers Name",
    PlaceholderText = "Enter custom name...",
    Callback = function(text)
        customName = text
        print("Custom name entered:", customName)
    end
})

MainTab:CreateButton({
    Name = "Equip Custom Power",
    Callback = function()
        ToolModule:GetTools(selectedTool1, selectedTool2)
        local ui = localPlayer.PlayerGui.ShopGui.StoreHolder.Store.PAGES.Powers
        spawn(function()
            while true do
                ui.CurrentlyEquipped.Text = "Currently Equipped: " .. (customName or "")
                task.wait()
            end
        end)
    end
})

MainTab:CreateSection({Name = "Boosts"})

MainTab:CreateButton({
    Name = "Enable Dash",
    Callback = function()
        localPlayer.Boosts["Faster Sprint"].Value = 5
        local ui = localPlayer.PlayerGui.ShopGui.StoreHolder.Store.PAGES.Boosts
        local Speed = ui["Faster Sprint"]
        spawn(function()
            while true do
                task.wait()
                Speed.BuyButtonRobux.Visible = false
                Speed.BuyButtonCoin.Visible = false
                Speed.ItemLevel.Text = "Current Level (5)"
            end
        end)
    end
})

MainTab:CreateButton({
    Name = "Won Boost",
    Callback = function()
        localPlayer.Boosts["Won Boost"].Value = 5
        local ui = localPlayer.PlayerGui.ShopGui.StoreHolder.Store.PAGES.Boosts
        local Speed = ui["Won Boost"]
        spawn(function()
            while true do
                task.wait()
                Speed.BuyButtonRobux.Visible = false
                Speed.BuyButtonCoin.Visible = false
                Speed.ItemLevel.Text = "Current Level (5)"
            end
        end)
    end
})

MainTab:CreateButton({
    Name = "Strength Boost",
    Callback = function()
        localPlayer.Boosts["Damage Boost"].Value = 5
        local ui = localPlayer.PlayerGui.ShopGui.StoreHolder.Store.PAGES.Boosts
        local Speed = ui["Damage Boost"]
        spawn(function()
            while true do
                task.wait()
                Speed.BuyButtonRobux.Visible = false
                Speed.BuyButtonCoin.Visible = false
                Speed.ItemLevel.Text = "Current Level (5)"
            end
        end)
    end
})

-- ==================== PLAYER TAB ====================
PlayerTab:CreateSection({Name = "Player Teleports"})

local playerOptions = getPlayerList()
local selectedPlayerName = playerOptions[1]

PlayerTab:CreateDropdown({
    Name = "Player Selector",
    Options = playerOptions,
    CurrentOption = selectedPlayerName,
    Callback = function(selectedName)
        selectedPlayer = getPlayerByDisplayName(selectedName)
        selectedPlayerName = selectedName
    end
})

PlayerTab:CreateButton({
    Name = "Teleport To Selected Player",
    Callback = function()
        if selectedPlayer then
            teleportToPlayer(selectedPlayer)
        else
            Luna:Notify({Title = "Error", Content = "No player selected!", Duration = 3, Image = "Warning"})
        end
    end
})

PlayerTab:CreateSection({Name = "Player Movement"})

local infiniteJumpEnabled = false
local jumpConnection = nil

PlayerTab:CreateToggle({
    Name = "Infinite Jump",
    CurrentValue = false,
    Callback = function(Value)
        infiniteJumpEnabled = Value

        if infiniteJumpEnabled then
            jumpConnection = game:GetService("UserInputService").JumpRequest:Connect(function()
                local character = localPlayer.Character
                if character then
                    local humanoid = character:FindFirstChildOfClass("Humanoid")
                    if humanoid then
                        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                    end
                end
            end)
        else
            if jumpConnection then
                jumpConnection:Disconnect()
                jumpConnection = nil
            end
        end
    end
})

local noclipEnabled = false
local noclipConnection = nil

PlayerTab:CreateToggle({
    Name = "Noclip",
    CurrentValue = false,
    Callback = function(Value)
        noclipEnabled = Value

        if noclipEnabled then
            noclipConnection = RunService.Stepped:Connect(function()
                if localPlayer.Character then
                    for _, part in pairs(localPlayer.Character:GetDescendants()) do
                        if part:IsA("BasePart") then
                            part.CanCollide = false
                        end
                    end
                end
            end)
        else
            if noclipConnection then
                noclipConnection:Disconnect()
                noclipConnection = nil
            end
        end
    end
})

-- ==================== COMBAT TAB ====================
CombatTab:CreateSection({Name = "Auto Attacks"})

local isAutoAttackActive = false
local autoAttackLoop = nil

CombatTab:CreateToggle({
    Name = "Auto Attack",
    CurrentValue = false,
    Callback = function(Value)
        isAutoAttackActive = Value
        
        if Value then
            Luna:Notify({Title = "AUTO ATTACK", Content = "ACTIVE - Hunting enemies!", Duration = 3, Image = "Success"})
            
            if autoAttackLoop then
                autoAttackLoop:Disconnect()
            end
            
            autoAttackLoop = game:GetService("RunService").Heartbeat:Connect(function()
                if not isAutoAttackActive then return end
                -- Auto attack logic would go here
            end)
        else
            Luna:Notify({Title = "AUTO ATTACK", Content = "INACTIVE", Duration = 3, Image = "Warning"})
            if autoAttackLoop then
                autoAttackLoop:Disconnect()
                autoAttackLoop = nil
            end
        end
    end
})

-- ==================== RLGL TAB ====================
RLGLTab:CreateSection({Name = "Red Light Green Light"})

RLGLTab:CreateButton({
    Name = "RLGL - Teleport To End",
    Callback = function()
        local char = localPlayer.Character
        if char and char:FindFirstChild("HumanoidRootPart") then
            char.HumanoidRootPart.CFrame = CFrame.new(-46.0587921, 1025.23352, 108.6353122)
        end
    end
})

RLGLTab:CreateButton({
    Name = "RLGL - Teleport To Start",
    Callback = function()
        local char = localPlayer.Character
        if char and char:FindFirstChild("HumanoidRootPart") then
            char.HumanoidRootPart.CFrame = CFrame.new(-48.5137215, 1024.521, -492.023163)
        end
    end
})

-- ==================== TUG OF WAR TAB ====================
TugOfWarTab:CreateSection({Name = "Tug of War"})

local tugOfWarAutoEnabled = false
local tugOfWarAutoThread = nil
local Remote = game:GetService("ReplicatedStorage").Remotes:WaitForChild("TemporaryReachedBindable")
local VALID_PULL_DATA = { { IHateYou = true } }

TugOfWarTab:CreateToggle({
    Name = "Tug of War Auto",
    CurrentValue = false,
    Callback = function(Value)
        tugOfWarAutoEnabled = Value
        if Value then
            if tugOfWarAutoThread then return end
            tugOfWarAutoThread = task.spawn(function()
                while tugOfWarAutoEnabled do
                    Remote:FireServer(unpack(VALID_PULL_DATA))
                    task.wait(0.025)
                end
                tugOfWarAutoThread = nil
            end)
        else
            tugOfWarAutoEnabled = false
            if tugOfWarAutoThread then
                task.cancel(tugOfWarAutoThread)
                tugOfWarAutoThread = nil
            end
        end
    end
})

-- ==================== HIDE AND SEEK TAB ====================
HideSeekTab:CreateSection({Name = "Hide and Seek"})

HideSeekTab:CreateButton({
    Name = "Final Dinner - Teleport To Safe Spot",
    Callback = function()
        local char = localPlayer.Character or localPlayer.CharacterAdded:Wait()
        if char and char:FindFirstChild("HumanoidRootPart") then
            char.HumanoidRootPart.CFrame = CFrame.new(182.413818, 121.033997, -93.8286514)
        end
    end
})

-- ==================== JUMP ROPE TAB ====================
JumpRopeTab:CreateSection({Name = "Jump Rope"})

JumpRopeTab:CreateButton({
    Name = "Jump Rope - Teleport To End",
    Callback = function()
        local char = localPlayer.Character or localPlayer.CharacterAdded:Wait()
        if char and char:FindFirstChild("HumanoidRootPart") then
            char.HumanoidRootPart.CFrame = CFrame.new(720.896057, 198.628311, 921.170654)
        end
    end
})

JumpRopeTab:CreateButton({
    Name = "Jump Rope - Delete The Rope",
    Callback = function()
        if game.Workspace.Effects:FindFirstChild("rope") then
            game.Workspace.Effects.rope:Destroy()
        end
    end
})

-- ==================== GLASS BRIDGE TAB ====================
GlassBridgeTab:CreateSection({Name = "Glass Bridge"})

GlassBridgeTab:CreateButton({
    Name = "Glass Bridge - Teleport To End",
    Callback = function()
        local char = localPlayer.Character or localPlayer.CharacterAdded:Wait()
        if char and char:FindFirstChild("HumanoidRootPart") then
            char.HumanoidRootPart.CFrame = CFrame.new(-196.372467, 522.192139, -1534.20984)
        end
    end
})

GlassBridgeTab:CreateButton({
    Name = "Glass Bridge Fake Glass",
    Callback = function()
        CreateGlassBridgeCover()
    end
})

-- ==================== MINGLE TAB ====================
MingleTab:CreateSection({Name = "Mingle"})

MingleTab:CreateButton({
    Name = "Teleport To Room",
    Callback = function()
        local char = localPlayer.Character
        if char and char:FindFirstChild("HumanoidRootPart") then
            char.HumanoidRootPart.CFrame = CFrame.new(1170.68262, 403.950592, -486.154968)
        end
    end
})

-- ==================== FINALS TAB ====================
FinalsTab:CreateSection({Name = "Finals"})

FinalsTab:CreateButton({
    Name = "Anti fall",
    Callback = function()
        local player = Players.LocalPlayer
        repeat task.wait() until player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        local character = player.Character
        local rootPart = character:WaitForChild("HumanoidRootPart")
        local startingY = rootPart.Position.Y
        local fallLimit = startingY - 5
        local teleported = false

        RunService.RenderStepped:Connect(function()
            if not rootPart or not rootPart.Parent then return end
            if rootPart.Position.Y < fallLimit and not teleported then
                teleported = true
                local nearestPlayer
                local nearestDist = math.huge
                for _, other in ipairs(Players:GetPlayers()) do
                    if other ~= player and other.Character and other.Character:FindFirstChild("HumanoidRootPart") then
                        local hum = other.Character:FindFirstChild("Humanoid")
                        if hum and hum.Health > 0 then
                            local dist = (rootPart.Position - other.Character.HumanoidRootPart.Position).Magnitude
                            if dist < nearestDist then
                                nearestDist = dist
                                nearestPlayer = other
                            end
                        end
                    end
                end
                if nearestPlayer and nearestPlayer.Character and nearestPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    local targetRoot = nearestPlayer.Character.HumanoidRootPart
                    local direction = (rootPart.Position - targetRoot.Position).Unit
                    rootPart.CFrame = CFrame.new(targetRoot.Position + direction * 3)
                else
                    rootPart.CFrame = CFrame.new(rootPart.Position.X, startingY, rootPart.Position.Z)
                end
            end
            if rootPart.Position.Y >= startingY - 1 then
                teleported = false
            end
        end)
    end
})

-- ==================== MISC TAB ====================
MiscTab:CreateSection({Name = "Teleports"})

MiscTab:CreateButton({
    Name = "Teleport To Spawn",
    Callback = function()
        local char = localPlayer.Character
        if char and char:FindFirstChild("HumanoidRootPart") then
            char.HumanoidRootPart.CFrame = CFrame.new(196.83342, 55.9547985, -90.4745865)
        end
    end
})

MiscTab:CreateButton({
    Name = "Teleport To Safe Spot",
    Callback = function()
        local char = localPlayer.Character or localPlayer.CharacterAdded:Wait()
        if char and char:FindFirstChild("HumanoidRootPart") then
            char.HumanoidRootPart.CFrame = CFrame.new(179.030807, 57.9083214, 49.8269196)
        end
    end
})

MiscTab:CreateSection({Name = "Other"})

MiscTab:CreateButton({
    Name = "FPS Boost",
    Callback = function()
        local Lighting = game:GetService("Lighting")
        Lighting.GlobalShadows = false
        Lighting.FogEnd = 100000
        Lighting.Brightness = 1

        for _, v in pairs(workspace:GetDescendants()) do
            if v:IsA("BasePart") then
                v.Material = Enum.Material.SmoothPlastic
            end
        end
        Luna:Notify({Title = "FPS Boost", Content = "Graphics optimized for better performance!", Duration = 4, Image = "Info"})
    end
})

print("DAHEN HUB LOADED WITH LUNA UI - ALL TABS SHOULD BE WORKING")
